{"version":3,"sources":["components/AppBar.tsx","Icons/SelLogo.tsx","components/Drawer.tsx","Images/branchesLeftDark.png","Images/branchesLeftLight.png","Images/branchesRightDark.png","Images/branchesRightLight.png","components/CommitNode.tsx","Theme.ts","components/CommitMessage.tsx","components/Commit.tsx","Images/profile-picture.jpg","components/Branch.tsx","Images/wsu.png","Images/GrcLogo.png","Images/psi_adobespark.png","branches/MainBranch.tsx","branches/projects/SortingVisualizationBranch.tsx","branches/projects/PathFindingBranch.tsx","branches/projects/ChessBranch.tsx","branches/work/SelBranch.tsx","branches/work/PsiBranch.tsx","branches/projects/RecipePlannerBranch.tsx","App.tsx","index.tsx"],"names":["CustomAppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","backgroundColor","palette","primary","dark","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","AppBar","setOpen","useTheme","colorMode","useContext","ColorModeContext","BranchContext","branch","setBranch","position","Toolbar","IconButton","onClick","edge","sx","marginRight","display","disableRipple","color","Typography","variant","noWrap","component","cursor","padding","document","getElementById","scrollIntoView","behavior","flexGrow","ml","toggleColorMode","mode","Brightness7","Brightness4","SelLogo","version","id","xmlns","x","y","viewBox","d","openedMixin","overflowX","closedMixin","spacing","breakpoints","up","DrawerHeader","alignItems","justifyContent","mixins","toolbar","StyledDrawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","Drawer","useState","openBranches","setOpenBranches","openWork","setOpenWork","openProjects","setOpenProjects","handleClick","elementId","setTimeout","PaperProps","background","paper","ChevronLeft","Divider","List","ListItem","button","ListItemIcon","Home","ListItemText","Info","Work","pl","icon","faLaptopCode","School","ContactPage","ListItemButton","faCodeBranch","style","height","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","Box","fill","text","opacity","HomeWork","Fastfood","faChessKing","GridOn","BarChart","CommitNode","link","isBranch","isInit","image","Icon","size","faIcon","iconSize","Element","routeBranch","hoverable","minHeight","userSelect","undefined","borderLeft","secondary","main","left","bottom","ColorSelector","light","GetBackgroundColor","borderRadius","border","ColorSelectorDark","GetBorderColor","overflow","transform","window","focus","fontSize","src","objectFit","alt","CommitMessage","title","content","subContent","date","paddingLeft","fontWeight","fontStyle","lineHeight","paddingRight","alignSelf","Commit","maxWidth","Branch","children","flexDirection","borderBottom","borderBottomLeftRadius","top","borderTop","borderRight","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","MainBranch","ProfilePicture","Person","Code","PsiLogo","WsuLogo","GrcLogo","GitHub","LinkedIn","InsertDriveFile","Email","faGitAlt","SortingVisualizationBranch","OpenInNew","PathFindingBranch","ChessBranch","SelBranch","faTrophy","CheckCircle","PsiBranch","RecipePlannerBranch","createContext","App","setMode","useMemo","prevMode","createTheme","default","getThemePalette","branchValue","useEffect","Provider","value","ThemeProvider","marginTop","getBranch","right","BranchesLeftDark","BranchesLeftLight","BranchesRightDark","BranchesRightLight","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7cf87255.chunk.js","sourcesContent":["import { styled, useTheme } from \"@mui/material/styles\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useContext } from \"react\";\nimport { Brightness4, Brightness7 } from \"@mui/icons-material\";\nimport { BranchContext, ColorModeContext } from \"../App\";\nimport { Box } from \"@mui/system\";\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n  setOpen?: () => void;\n}\n\nconst CustomAppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  backgroundColor: theme.palette.primary.dark,\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: 240,\n    width: `calc(100% - 240px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst AppBar = ({ open, setOpen }: AppBarProps) => {\n  const theme = useTheme();\n  const colorMode = useContext(ColorModeContext);\n  const { branch, setBranch } = useContext(BranchContext);\n  return (\n    <CustomAppBar position=\"fixed\" open={open}>\n      <Toolbar>\n        <IconButton\n          onClick={setOpen}\n          edge=\"start\"\n          sx={{\n            marginRight: \"18px\",\n            ...(open && { display: \"none\" }),\n          }}\n          disableRipple\n          color=\"inherit\"\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          variant=\"h6\"\n          noWrap\n          component=\"div\"\n          sx={{\n            cursor: \"pointer\",\n            padding: \"5px 5px 5px 0px\",\n          }}\n          onClick={() => {\n            if (branch !== \"main\") {\n              setBranch(\"main\");\n            } else {\n              document\n                .getElementById(\"head\")\n                ?.scrollIntoView({ behavior: \"smooth\" });\n            }\n          }}\n        >\n          James Crews\n        </Typography>\n\n        <Box sx={{ flexGrow: 1 }} />\n        <IconButton\n          sx={{ ml: 1 }}\n          onClick={colorMode.toggleColorMode}\n          color=\"inherit\"\n          disableRipple\n        >\n          {theme.palette.mode === \"dark\" ? <Brightness7 /> : <Brightness4 />}\n        </IconButton>\n      </Toolbar>\n    </CustomAppBar>\n  );\n};\n\nexport default AppBar;\n","const SelLogo = () => {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Layer_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 169.3 98.1\"\n    >\n      <title>SEL_Logo-Stacked_White</title>\n      <path\n        d=\"M17,9.4c-4.2,0-7.6,3.4-7.6,7.6v64.2c0,4.2,3.4,7.6,7.6,7.6h135.2c4.2,0,7.6-3.4,7.6-7.6l0,0V17\n\tc0-4.2-3.4-7.5-7.6-7.5H17z M152.2,98.1H17c-9.4,0-17-7.6-17-17V17C0,7.6,7.6,0,17,0h135.2c9.4,0,17,7.6,17,17v64.2\n\tC169.2,90.5,161.6,98.1,152.2,98.1L152.2,98.1L152.2,98.1z\"\n      />\n      <path\n        d=\"M145.5,66.7h-21V24.1l0,0c0-1.4-1.1-2.5-2.5-2.5h-4.7c-1.4,0-2.6,1.1-2.6,2.5c0,0,0,0,0,0V74\n\tc0,1.4,1.1,2.5,2.5,2.5c0,0,0,0,0,0h28.3c1.4,0,2.5-1.1,2.5-2.5v-4.7C148.1,67.8,146.9,66.7,145.5,66.7\n\tC145.5,66.7,145.5,66.7,145.5,66.7z\"\n      />\n      <path\n        d=\"M105.7,24.1c0-1.4-1.1-2.5-2.5-2.5c0,0,0,0,0,0H74.8c-1.4,0-2.5,1.1-2.6,2.5l0,0V74l0,0c0,1.4,1.1,2.5,2.6,2.5\n\th28.3c1.4,0,2.5-1.1,2.5-2.5l0,0v-4.7l0,0c0-1.4-1.1-2.5-2.5-2.6h-21V54h11.5c1.4,0,2.5-1.2,2.5-2.5l0,0v-4.7l0,0\n\tc0-1.4-1.1-2.5-2.5-2.5H82.1V31.4h21c1.4,0,2.6-1.1,2.6-2.5c0,0,0,0,0-0.1l0,0V24.1L105.7,24.1z\"\n      />\n      <path\n        d=\"M63.1,58.6c-0.1-1.2-0.4-2.4-0.9-3.5c-1.7-4-5-7.1-9-8.7c-2.5-0.9-5.1-1.6-7.7-2c-1.6-0.3-3.2-0.6-4.8-1\n\tc-1.3-0.3-2.6-0.7-3.9-1.3c-1.6-0.8-3.1-1.7-3.8-3.4c-0.4-1.2-0.3-2.5,0.4-3.6c1-1.4,2.4-2.5,4.1-3.2c3.5-1.6,7.6-1.6,11.1,0.1\n\tc0.5,0.2,0.9,0.5,1.3,0.8c0.9,0.7,1.8,1.5,2.5,2.4c0.5,0.7,1.2,1.3,1.9,1.8c0.9,0.5,1.9,0.7,2.9,0.6c1.7,0,4-0.3,5-1.8\n\tc0.3-0.4,0.4-0.9,0.5-1.3c0-0.6-0.1-1.3-0.3-1.9c-0.3-1-0.8-2-1.4-2.9c-0.9-1.2-1.9-2.4-3.1-3.4c-0.3-0.2-0.6-0.5-0.9-0.7\n\tc-4.9-3.5-10.9-5.2-16.9-4.6c-3.1,0.4-6.1,1.3-8.8,2.8c-2.2,1.3-4.2,3-5.7,5.1c-1.9,2.6-2.9,5.8-2.8,9c0.1,3.2,1.3,6.3,3.4,8.7\n\tc1,1.2,2.2,2.2,3.6,3.1c4.1,2.3,11,3.8,16.6,5.2c2,0.5,3.9,0.9,5.5,2.4c0.5,0.5,0.9,1.2,1.1,1.9c1,3-1.4,5.5-3.8,6.8\n\tc-1.2,0.6-2.5,1-3.9,1.3c-1.7,0.3-3.4,0.3-5.1-0.1c-1.3-0.2-2.6-0.6-3.8-1.2c-1.2-0.8-2.2-1.8-3-3.1c-0.3-0.4-0.6-0.8-0.9-1.2\n\tc-1-0.8-2.2-1.1-3.4-1c-0.7,0-1.5,0.1-2.2,0.2c-0.7,0.1-1.3,0.3-1.9,0.6c-0.6,0.3-1.1,0.8-1.4,1.4c-0.2,0.6-0.3,1.2-0.3,1.8\n\tc0,0.2,0,0.3,0,0.5c0.1,0.9,0.4,1.8,0.9,2.6c1,1.8,2.4,3.4,4,4.7c0.5,0.4,1,0.8,1.5,1.1c0.9,0.6,1.8,1.1,2.7,1.6\n\tc3.2,1.4,6.7,2.2,10.2,2.3c2,0,4-0.3,6-0.8c3.5-0.8,6.7-2.5,9.3-4.9c0.7-0.7,1.4-1.5,2-2.3C62.3,66.2,63.4,62.4,63.1,58.6z\"\n      />\n    </svg>\n  );\n};\n\nexport default SelLogo;\n","import {\n  Box,\n  Collapse,\n  Drawer as MuiDrawer,\n  ListItemButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  IconButton,\n  styled,\n  Theme,\n  CSSObject,\n} from \"@mui/material\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCodeBranch,\n  faLaptopCode,\n  faChessKing,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  ExpandLess,\n  ExpandMore,\n  BarChart,\n  Fastfood,\n  GridOn,\n  HomeWork,\n  Home,\n  Info,\n  Work,\n  School,\n  ContactPage,\n  ChevronLeft,\n} from \"@mui/icons-material\";\nimport { useContext, useState } from \"react\";\nimport SelLogo from \"../Icons/SelLogo\";\nimport { BranchContext } from \"../App\";\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(7)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  padding: theme.spacing(0, 1),\n  ...theme.mixins.toolbar,\n}));\n\nconst StyledDrawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\ninterface DrawerProps {\n  open: boolean;\n  setOpen: (state: boolean) => void;\n}\n\nconst Drawer = ({ open, setOpen }: DrawerProps) => {\n  const [openBranches, setOpenBranches] = useState(false);\n  const [openWork, setOpenWork] = useState(true);\n  const [openProjects, setOpenProjects] = useState(true);\n  const { branch, setBranch } = useContext(BranchContext);\n  const handleClick = (elementId: string) => {\n    if (branch !== \"main\") {\n      setBranch(\"main\");\n      setTimeout(() => {\n        document\n          .getElementById(elementId)\n          ?.scrollIntoView({ behavior: \"smooth\" });\n      }, 1);\n    } else {\n      document\n        .getElementById(elementId)\n        ?.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n  return (\n    <StyledDrawer\n      variant=\"permanent\"\n      open={open}\n      PaperProps={{\n        sx: {\n          backgroundColor: (theme) => theme.palette.background.paper,\n        },\n      }}\n    >\n      <DrawerHeader>\n        <IconButton onClick={() => setOpen(false)} disableRipple>\n          <ChevronLeft />\n        </IconButton>\n      </DrawerHeader>\n      <Divider />\n      <List>\n        <ListItem\n          button\n          key=\"Home\"\n          disableRipple\n          onClick={() => {\n            if (branch === \"main\") {\n              handleClick(\"head\");\n            } else {\n              setBranch(\"main\");\n            }\n          }}\n        >\n          <ListItemIcon>\n            <Home />\n          </ListItemIcon>\n          <ListItemText primary=\"Home\" sx={{ ml: -1 }} />\n        </ListItem>\n        <ListItem\n          button\n          key=\"About\"\n          disableRipple\n          onClick={() => handleClick(\"about\")}\n        >\n          <ListItemIcon>\n            <Info />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" sx={{ ml: -1 }} />\n        </ListItem>\n        <ListItem\n          button\n          key=\"Work\"\n          disableRipple\n          onClick={() => handleClick(\"work\")}\n        >\n          <ListItemIcon>\n            <Work />\n          </ListItemIcon>\n          <ListItemText primary=\"Work Experience\" sx={{ ml: -1 }} />\n        </ListItem>\n        <ListItem\n          button\n          key=\"Projects\"\n          disableRipple\n          onClick={() => handleClick(\"projects\")}\n        >\n          <ListItemIcon sx={{ pl: \"3px\" }}>\n            <FontAwesomeIcon icon={faLaptopCode} />\n          </ListItemIcon>\n          <ListItemText primary=\"Personal Projects\" sx={{ ml: -1 }} />\n        </ListItem>\n        <ListItem\n          button\n          key=\"Education\"\n          disableRipple\n          onClick={() => handleClick(\"education\")}\n        >\n          <ListItemIcon>\n            <School />\n          </ListItemIcon>\n          <ListItemText primary=\"Education\" sx={{ ml: -1 }} />\n        </ListItem>\n        <ListItem\n          button\n          key=\"Contact\"\n          disableRipple\n          onClick={() => handleClick(\"contact\")}\n        >\n          <ListItemIcon>\n            <ContactPage />\n          </ListItemIcon>\n          <ListItemText primary=\"Contact\" sx={{ ml: -1 }} />\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItemButton\n          onClick={() => {\n            if (open) {\n              setOpenBranches(!openBranches);\n            } else {\n              setOpen(true);\n              setOpenBranches(true);\n            }\n          }}\n          disableRipple\n        >\n          <ListItemIcon sx={{ pl: \"3px\" }}>\n            <FontAwesomeIcon\n              icon={faCodeBranch}\n              style={{ width: \"20px\", height: \"20px\" }}\n            />\n          </ListItemIcon>\n          <ListItemText primary=\"Branches\" sx={{ ml: -1 }} />\n          {openBranches ? <ExpandLess /> : <ExpandMore />}\n        </ListItemButton>\n        <Collapse in={openBranches && open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItemButton\n              onClick={() => setOpenWork(!openWork)}\n              sx={{ pl: 4 }}\n              disableRipple\n            >\n              <ListItemIcon>\n                <Work />\n              </ListItemIcon>\n              <ListItemText primary=\"Work\" sx={{ ml: -1 }} />\n              {openWork ? <ExpandLess /> : <ExpandMore />}\n            </ListItemButton>\n            <Collapse in={openWork} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                <ListItemButton\n                  sx={{ pl: 7 }}\n                  disableRipple\n                  onClick={() => setBranch(\"sel\")}\n                >\n                  <ListItemIcon>\n                    <Box\n                      sx={{\n                        width: \"35px\",\n                        height: \"20px\",\n                        ml: \"-4px\",\n                        fill: (theme) => theme.palette.text.primary,\n                        opacity: 0.7,\n                      }}\n                    >\n                      <SelLogo />\n                    </Box>\n                  </ListItemIcon>\n                  <ListItemText primary=\"SEL\" sx={{ ml: -1 }} />\n                </ListItemButton>\n                <ListItemButton\n                  sx={{ pl: 7 }}\n                  disableRipple\n                  onClick={() => setBranch(\"psi\")}\n                >\n                  <ListItemIcon>\n                    <HomeWork />\n                  </ListItemIcon>\n                  <ListItemText primary=\"PSI\" sx={{ ml: -1 }} />\n                </ListItemButton>\n              </List>\n            </Collapse>\n            <ListItemButton\n              onClick={() => setOpenProjects(!openProjects)}\n              sx={{ pl: 4 }}\n              disableRipple\n            >\n              <ListItemIcon\n                sx={{\n                  pl: \"3px\",\n                }}\n              >\n                <FontAwesomeIcon icon={faLaptopCode} />\n              </ListItemIcon>\n              <ListItemText primary=\"Projects\" sx={{ ml: -1 }} />\n              {openProjects ? <ExpandLess /> : <ExpandMore />}\n            </ListItemButton>\n            <Collapse in={openProjects} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                <ListItemButton\n                  sx={{ pl: 7 }}\n                  disableRipple\n                  onClick={() => setBranch(\"recipe\")}\n                >\n                  <ListItemIcon>\n                    <Fastfood />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Recipe App\" sx={{ ml: -1 }} />\n                </ListItemButton>\n                <ListItemButton\n                  sx={{ pl: 7 }}\n                  disableRipple\n                  onClick={() => setBranch(\"chess\")}\n                >\n                  <ListItemIcon sx={{ pl: \"2px\" }}>\n                    <FontAwesomeIcon\n                      icon={faChessKing}\n                      style={{ width: \"20px\", height: \"20px\" }}\n                    />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Chess AI\" sx={{ ml: -1 }} />\n                </ListItemButton>\n                <ListItemButton\n                  sx={{ pl: 7 }}\n                  disableRipple\n                  onClick={() => setBranch(\"pathFinding\")}\n                >\n                  <ListItemIcon>\n                    <GridOn />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Path Finding\" sx={{ ml: -1 }} />\n                </ListItemButton>\n                <ListItemButton\n                  sx={{ pl: 7 }}\n                  disableRipple\n                  onClick={() => setBranch(\"sorting\")}\n                >\n                  <ListItemIcon>\n                    <BarChart />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Sorting\" sx={{ ml: -1 }} />\n                </ListItemButton>\n              </List>\n            </Collapse>\n          </List>\n        </Collapse>\n      </List>\n    </StyledDrawer>\n  );\n};\n\nexport default Drawer;\n","export default __webpack_public_path__ + \"static/media/branchesLeftDark.e0828a2d.png\";","export default __webpack_public_path__ + \"static/media/branchesLeftLight.08f5ff9c.png\";","export default __webpack_public_path__ + \"static/media/branchesRightDark.88057609.png\";","export default __webpack_public_path__ + \"static/media/branchesRightLight.ab950069.png\";","import { Box, Theme } from \"@mui/system\";\nimport { ColorSelector, ColorSelectorDark } from \"../Theme\";\nimport { ReactNode, useContext } from \"react\";\nimport { OverridableComponent } from \"@mui/material/OverridableComponent\";\nimport { SvgIconTypeMap } from \"@mui/material\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { BranchContext } from \"../App\";\nimport { branch } from \"../branches/Branch\";\n\nexport interface CommitNodeProps {\n  id?: string;\n  link?: string;\n  isBranch?: boolean;\n  isInit?: boolean;\n  image?: string;\n  Icon?: OverridableComponent<SvgIconTypeMap<{}, \"svg\">> & {\n    muiName: string;\n  };\n  size?: \"sm\" | \"lg\";\n  faIcon?: IconProp;\n  Element?: ReactNode;\n  iconSize?: number;\n  branch?: branch;\n  routeBranch?: boolean;\n}\n\nconst CommitNode = ({\n  id,\n  link,\n  isBranch,\n  isInit,\n  image,\n  Icon,\n  size = \"sm\",\n  faIcon,\n  iconSize,\n  Element,\n  branch,\n  routeBranch,\n}: CommitNodeProps) => {\n  const { setBranch } = useContext(BranchContext);\n  const hoverable = !!link || !!routeBranch;\n\n  const GetBackgroundColor = (theme: Theme) => {\n    if (branch) {\n      return ColorSelector(branch);\n    } else if (isBranch) {\n      return theme.palette.secondary.light;\n    } else {\n      return theme.palette.primary.main;\n    }\n  };\n\n  const GetBorderColor = (theme: Theme) => {\n    if (branch) {\n      return ColorSelectorDark(branch);\n    } else if (isBranch) {\n      return theme.palette.secondary.main;\n    } else {\n      return theme.palette.primary.dark;\n    }\n  };\n\n  return (\n    <Box\n      id={id}\n      sx={{\n        minHeight: size === \"sm\" ? \"150px\" : \"250px\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        position: \"relative\",\n        userSelect: \"none\",\n        padding: size === \"sm\" ? \"0px 30px\" : undefined,\n      }}\n    >\n      <Box\n        sx={{\n          borderLeft: (theme) =>\n            `solid 5px ${\n              isBranch\n                ? theme.palette.secondary.main\n                : theme.palette.primary.dark\n            }`,\n          height: size === \"sm\" ? \"100%\" : \"50%\",\n          position: \"absolute\",\n          left: \"50%\",\n          bottom: isInit ? 50 : 0,\n          zIndex: 0,\n        }}\n      />\n      <Box\n        sx={{\n          width: size === \"sm\" ? \"90px\" : \"150px\",\n          height: size === \"sm\" ? \"90px\" : \"150px\",\n          backgroundColor: (theme) => GetBackgroundColor(theme),\n          borderRadius: \"100%\",\n          border: (theme) => `solid 10px ${GetBorderColor(theme)}`,\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          zIndex: 1,\n          overflow: \"hidden\",\n          \"&:hover\": {\n            cursor: hoverable ? \"pointer\" : undefined,\n            transform: hoverable ? \"scale(1.1)\" : undefined,\n            transition: hoverable ? \"transform 0.1s ease-in-out\" : undefined,\n          },\n        }}\n        onClick={() => {\n          if (link) {\n            window.open(link)?.focus();\n          } else if (branch && routeBranch) {\n            setBranch(branch);\n          }\n        }}\n      >\n        {Icon && (\n          <Icon sx={{ fontSize: iconSize ? iconSize : 50, fill: \"white\" }} />\n        )}\n        {faIcon && (\n          <FontAwesomeIcon\n            icon={faIcon}\n            style={{ fontSize: iconSize ? iconSize : 50 }}\n            color=\"#FFFFFF\"\n          />\n        )}\n        {image && (\n          <img\n            src={image}\n            style={{\n              width: `${iconSize ? iconSize : 100}%`,\n              objectFit: \"scale-down\",\n            }}\n            alt=\"\"\n          />\n        )}\n        {Element}\n      </Box>\n    </Box>\n  );\n};\n\nexport default CommitNode;\n","import { PaletteMode } from \"@mui/material\";\nimport { branch } from \"./branches/Branch\";\n\nexport const getThemePalette = (mode: PaletteMode) => ({\n  palette: {\n    mode,\n    ...(mode === \"light\"\n      ? {\n          primary: {\n            main: \"#7289da\",\n          },\n          secondary: {\n            main: \"#da727e\",\n          },\n        }\n      : {\n          primary: {\n            main: \"#7289da\",\n          },\n          secondary: {\n            main: \"#da727e\",\n          },\n          background: {\n            default: \"#36393f\",\n            paper: \"#202225\",\n          },\n          text: {\n            primary: \"#FFFFFF\",\n          },\n        }),\n  },\n});\n\nexport const ColorSelector = (branch: branch) => {\n  switch (branch) {\n    case \"sel\":\n      return \"#162D71\";\n    case \"psi\":\n      return \"#64B4C9\";\n    case \"recipe\":\n      return \"#162D71\";\n    case \"chess\":\n      return \"#4C566A\";\n    case \"pathFinding\":\n      return \"#EA00D7\";\n    case \"sorting\":\n      return \"#00F6FF\";\n    case \"wsu\":\n      return \"#981E32\";\n    case \"grc\":\n      return \"#2C882B\";\n    case \"github\":\n      return \"#161B22\";\n    case \"linkedIn\":\n      return \"#0A66C2\";\n    case \"resume\":\n      return \"#FA0F00\";\n    case \"email\":\n      return \"#27A3E3\";\n    default:\n      return \"red\";\n  }\n};\n\nexport const ColorSelectorDark = (branch: branch) => {\n  switch (branch) {\n    case \"sel\":\n      return \"#070E24\";\n    case \"psi\":\n      return \"#3D6F7C\";\n    case \"recipe\":\n      return \"#070E24\";\n    case \"chess\":\n      return \"#2E3440\";\n    case \"pathFinding\":\n      return \"#9D0090\";\n    case \"sorting\":\n      return \"#00ACB2\";\n    case \"wsu\":\n      return \"#651321\";\n    case \"grc\":\n      return \"#1F611D\";\n    case \"github\":\n      return \"#0D1117\";\n    case \"linkedIn\":\n      return \"#05386B\";\n    case \"resume\":\n      return \"#AD0A00\";\n    case \"email\":\n      return \"#0074CD\";\n    default:\n      return \"red\";\n  }\n};\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport interface CommitMessageProps {\n  title?: string;\n  content?: string;\n  subContent?: string;\n  date?: string;\n  size?: \"sm\" | \"lg\";\n}\n\nconst CommitMessage = ({\n  title,\n  content,\n  subContent,\n  date,\n  size = \"sm\",\n}: CommitMessageProps) => {\n  return (\n    <Box\n      sx={{\n        paddingLeft: size === \"lg\" ? \"20px\" : undefined,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexGrow: 1,\n      }}\n    >\n      <div>\n        {title && (\n          <Typography\n            variant=\"h1\"\n            sx={{\n              fontWeight: 550,\n              fontSize: size === \"sm\" ? \"16pt\" : \"22pt\",\n              color: (theme) => theme.palette.text.primary,\n            }}\n          >\n            {title}\n          </Typography>\n        )}\n        {content && (\n          <Typography\n            sx={{\n              fontSize: \"12pt\",\n              color: (theme) => theme.palette.text.primary,\n            }}\n          >\n            {content}\n          </Typography>\n        )}\n        {subContent && (\n          <Typography\n            sx={{\n              fontStyle: \"italic\",\n              fontSize: \"12pt\",\n              color: (theme) => theme.palette.text.primary,\n              lineHeight: 1.2,\n            }}\n          >\n            {subContent}\n          </Typography>\n        )}\n      </div>\n      {date && (\n        <Typography\n          sx={{\n            fontSize: \"12pt\",\n            paddingRight: 4,\n            color: (theme) => theme.palette.text.primary,\n            alignSelf: \"center\",\n          }}\n        >\n          {date}\n        </Typography>\n      )}\n    </Box>\n  );\n};\n\nexport default CommitMessage;\n","import CommitNode, { CommitNodeProps } from \"./CommitNode\";\nimport CommitMessage, { CommitMessageProps } from \"./CommitMessage\";\nimport { Box } from \"@mui/system\";\n\ninterface CommitProps extends CommitNodeProps, CommitMessageProps {}\n\nconst Commit = ({\n  id,\n  link,\n  isBranch,\n  isInit,\n  Icon,\n  image,\n  size = \"sm\",\n  title,\n  content,\n  subContent,\n  date,\n  faIcon,\n  iconSize,\n  Element,\n  branch,\n  routeBranch,\n}: CommitProps) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        maxWidth: \"1200px\",\n      }}\n    >\n      <CommitNode\n        id={id}\n        link={link}\n        isBranch={isBranch}\n        isInit={isInit}\n        Icon={Icon}\n        faIcon={faIcon}\n        image={image}\n        size={size}\n        iconSize={iconSize}\n        Element={Element}\n        branch={branch}\n        routeBranch={routeBranch}\n      />\n\n      <CommitMessage\n        title={title}\n        content={content}\n        subContent={subContent}\n        date={date}\n        size={size}\n      />\n    </Box>\n  );\n};\n\nexport default Commit;\n","export default __webpack_public_path__ + \"static/media/profile-picture.b2037f3b.jpg\";","import { Box } from \"@mui/system\";\n\ninterface BranchProps {\n  children: JSX.Element | JSX.Element[];\n}\n\nconst Branch = ({ children }: BranchProps) => {\n  return (\n    <Box\n      sx={{\n        padding: \"37px 0px 37px 40px\",\n        marginLeft: \"85px\",\n        borderLeft: (theme) => `solid 5px ${theme.palette.primary.dark}`,\n        position: \"relative\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Box\n        sx={{\n          borderLeft: (theme) => `solid 5px ${theme.palette.secondary.main}`,\n          borderBottom: (theme) => `solid 5px ${theme.palette.secondary.main}`,\n          borderBottomLeftRadius: \"30px\",\n          position: \"absolute\",\n          left: -5,\n          top: -20,\n          width: \"65px\",\n          height: \"30px\",\n        }}\n      />\n      <Box\n        sx={{\n          borderTop: (theme) => `solid 5px ${theme.palette.secondary.main}`,\n          borderRight: (theme) => `solid 5px ${theme.palette.secondary.main}`,\n          borderTopRightRadius: \"30px\",\n          position: \"absolute\",\n          left: 60,\n          top: 10,\n          width: \"65px\",\n          height: \"30px\",\n        }}\n      />\n      {children}\n      <Box\n        sx={{\n          borderRight: (theme) => `solid 5px ${theme.palette.secondary.main}`,\n          borderBottom: (theme) => `solid 5px ${theme.palette.secondary.main}`,\n          borderBottomRightRadius: \"30px\",\n          position: \"absolute\",\n          left: 60,\n          bottom: 10,\n          width: \"65px\",\n          height: \"30px\",\n        }}\n      />\n      <Box\n        sx={{\n          borderTop: (theme) => `solid 5px ${theme.palette.secondary.main}`,\n          borderLeft: (theme) => `solid 5px ${theme.palette.secondary.main}`,\n          borderTopLeftRadius: \"30px\",\n          position: \"absolute\",\n          left: -5,\n          bottom: -20,\n          width: \"65px\",\n          height: \"30px\",\n          zIndex: 0,\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default Branch;\n","export default __webpack_public_path__ + \"static/media/wsu.ec44b066.png\";","export default __webpack_public_path__ + \"static/media/GrcLogo.5312b581.png\";","export default __webpack_public_path__ + \"static/media/psi_adobespark.8f5404ab.png\";","import Commit from \"../components/Commit\";\nimport ProfilePicture from \"../Images/profile-picture.jpg\";\nimport {\n  Work,\n  Info,\n  School,\n  ContactPage,\n  LinkedIn,\n  GitHub,\n  InsertDriveFile,\n  Email,\n  BarChart,\n  Fastfood,\n  GridOn,\n  Code,\n  Person,\n} from \"@mui/icons-material\";\nimport { faGitAlt } from \"@fortawesome/free-brands-svg-icons\";\nimport { faLaptopCode, faChessKing } from \"@fortawesome/free-solid-svg-icons\";\nimport Branch from \"../components/Branch\";\nimport WsuLogo from \"../Images/wsu.png\";\nimport GrcLogo from \"../Images/GrcLogo.png\";\nimport SelLogo from \"../Icons/SelLogo\";\nimport PsiLogo from \"../Images/psi_adobespark.png\";\n\nconst MainBranch = () => (\n  <>\n    <Commit\n      id=\"head\"\n      size=\"lg\"\n      image={ProfilePicture}\n      title=\"Hello! My name is James Crews.\"\n    />\n    <Commit Icon={Info} title=\"About\" id=\"about\" />\n    <Branch>\n      <Commit\n        Icon={Person}\n        isBranch\n        content=\"I am a self-taught software engineer with a background in both front-end and back-end development. I love programming new ideas and solving complex problems.\"\n      />\n      <Commit\n        Icon={Code}\n        isBranch\n        title=\"Skills\"\n        content=\"C#, React, Typescript, GraphQL, Material UI, CI/CD, git, .NET core, NUnit, SpecFlow, HTML, CSS\"\n      />\n    </Branch>\n    <Commit Icon={Work} title=\"Work Experience\" id=\"work\" />\n    <Branch>\n      <Commit\n        Element={\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              width: \"100%\",\n              height: \"40px\",\n              fill: \"#FFFFFF\",\n            }}\n          >\n            <SelLogo />\n          </div>\n        }\n        title=\"Associate Software Engineer\"\n        content=\"Schweitzer Engineering Laboratories\"\n        subContent=\"C#, React, GraphQL, Typescript\"\n        date=\"October 2020-Present\"\n        isBranch\n        branch=\"sel\"\n        routeBranch\n      />\n      <Commit\n        image={PsiLogo}\n        iconSize={80}\n        title=\"Control Systems Engineer\"\n        content=\"Process Solutions Inc\"\n        subContent=\"C#, RSLogix, WonderWare\"\n        date=\"April 2018-October 2020\"\n        isBranch\n        branch=\"psi\"\n        routeBranch\n      />\n    </Branch>\n    <Commit\n      faIcon={faLaptopCode}\n      iconSize={38}\n      title=\"Personal Projects\"\n      id=\"projects\"\n    />\n    <Branch>\n      <Commit\n        Icon={Fastfood}\n        title=\"Recipe Planner\"\n        content=\"App to find and plan recipes\"\n        subContent=\"C#, React, GraphQL, Typescript, MongoDB\"\n        isBranch\n        branch=\"recipe\"\n        routeBranch\n      />\n      <Commit\n        faIcon={faChessKing}\n        title=\"Chess AI - Min Max Algo\"\n        content=\"Chess AI with move highlighting\"\n        subContent=\"React, Typescript\"\n        isBranch\n        branch=\"chess\"\n        routeBranch\n      />\n      <Commit\n        Icon={GridOn}\n        title=\"Retro Path Finding Visualization\"\n        content=\"Visualization of popular path finding algorithms\"\n        subContent=\"React, Redux, Typescript, Express\"\n        isBranch\n        branch=\"pathFinding\"\n        routeBranch\n      />\n      <Commit\n        Icon={BarChart}\n        title=\"Sorting Visualization\"\n        content=\"Visualization of popular sorting algorithms\"\n        subContent=\"React, Typescript\"\n        isBranch\n        branch=\"sorting\"\n        routeBranch\n      />\n    </Branch>\n    <Commit Icon={School} title=\"Education\" id=\"education\" />\n    <Branch>\n      <Commit\n        image={WsuLogo}\n        title=\"Washington State University\"\n        content=\"B.S. Mechanical Engineering\"\n        date=\"GPA: 3.8\"\n        branch=\"wsu\"\n        isBranch\n      />\n      <Commit\n        image={GrcLogo}\n        title=\"Green River College\"\n        content=\"A.A.S. Mechanical Engineering\"\n        date=\"GPA: 3.5\"\n        branch=\"grc\"\n        iconSize={80}\n        isBranch\n      />\n    </Branch>\n    <Commit Icon={ContactPage} title=\"Contact\" id=\"contact\" />\n    <Branch>\n      <Commit\n        Icon={GitHub}\n        title=\"Github\"\n        branch=\"github\"\n        isBranch\n        link=\"https://github.com/JCrews253\"\n      />\n      <Commit\n        Icon={LinkedIn}\n        title=\"LinkedIn\"\n        branch=\"linkedIn\"\n        isBranch\n        link=\"https://linkedin.com/in/jamesrcrews\"\n      />\n      <Commit Icon={InsertDriveFile} title=\"Resume\" branch=\"resume\" isBranch />\n      <Commit\n        Icon={Email}\n        title=\"Email\"\n        branch=\"email\"\n        isBranch\n        link=\"mailto:jcrews206@gmail.com\"\n      />\n    </Branch>\n    <Commit faIcon={faGitAlt} title=\"Git init\" isInit />\n  </>\n);\n\nexport default MainBranch;\n","import { BarChart, Info, OpenInNew, GridOn, Code } from \"@mui/icons-material\";\nimport Commit from \"../../components/Commit\";\n\nconst SortingVisualizationBranch = () => {\n  return (\n    <>\n      <Commit\n        size=\"lg\"\n        id=\"head\"\n        Icon={BarChart}\n        title=\"Sorting Visualization\"\n        branch=\"sorting\"\n        iconSize={100}\n      />\n      <Commit Icon={Info} title=\"About\" content=\"description\" />\n      <Commit\n        Icon={OpenInNew}\n        title=\"View Live!\"\n        link=\"https://jcrews253.github.io/sorting-visualizer/\"\n      />\n      <Commit\n        Icon={Code}\n        title=\"Source Code\"\n        link=\"https://github.com/JCrews253/sorting-visualizer\"\n      />\n      <Commit\n        title=\"Next Project: Path Finding Visualization\"\n        Icon={GridOn}\n        isInit\n        branch=\"pathFinding\"\n        routeBranch\n      />\n    </>\n  );\n};\n\nexport default SortingVisualizationBranch;\n","import { faChessKing } from \"@fortawesome/free-solid-svg-icons\";\nimport { BarChart, Code, GridOn, Info, OpenInNew } from \"@mui/icons-material\";\nimport Commit from \"../../components/Commit\";\n\nconst PathFindingBranch = () => {\n  return (\n    <>\n      <Commit\n        size=\"lg\"\n        id=\"head\"\n        Icon={GridOn}\n        title=\"Retro Path Finding Visualization\"\n        branch=\"pathFinding\"\n        iconSize={100}\n      />\n      <Commit Icon={Info} title=\"About\" />\n      <Commit\n        Icon={OpenInNew}\n        title=\"View Live!\"\n        link=\"https://jcrews253.github.io/path-finding-visualizer/\"\n      />\n      <Commit\n        Icon={Code}\n        title=\"Source Code\"\n        link=\"https://github.com/JCrews253/path-finding-visualizer\"\n      />\n      <Commit\n        title=\"Next Project: Chess AI - Min Max Algo\"\n        faIcon={faChessKing}\n        branch=\"chess\"\n        routeBranch\n      />\n      <Commit\n        title=\"Previous Project: Sorting Visualization\"\n        Icon={BarChart}\n        isInit\n        branch=\"sorting\"\n        routeBranch\n      />\n    </>\n  );\n};\n\nexport default PathFindingBranch;\n","import { faChessKing } from \"@fortawesome/free-solid-svg-icons\";\nimport { Code, Fastfood, GridOn, Info, OpenInNew } from \"@mui/icons-material\";\nimport Commit from \"../../components/Commit\";\n\nconst ChessBranch = () => {\n  return (\n    <>\n      <Commit\n        size=\"lg\"\n        id=\"head\"\n        faIcon={faChessKing}\n        title=\"Chess AI - Min Max Algo\"\n        branch=\"chess\"\n        iconSize={100}\n      />\n      <Commit\n        Icon={Info}\n        title=\"Chess AI that uses the Min-Max game algorithm to determine its moves.\"\n      />\n      <Commit\n        Icon={OpenInNew}\n        title=\"View Live!\"\n        link=\"https://jcrews253.github.io/chess/\"\n      />\n      <Commit\n        Icon={Code}\n        title=\"Source Code\"\n        link=\"https://github.com/JCrews253/chess\"\n      />\n      <Commit\n        title=\"Next Project: Recipe Planner\"\n        Icon={Fastfood}\n        branch=\"recipe\"\n        routeBranch\n      />\n      <Commit\n        title=\"Previous Project: Path Finding Visualization\"\n        Icon={GridOn}\n        isInit\n        branch=\"pathFinding\"\n        routeBranch\n      />\n    </>\n  );\n};\n\nexport default ChessBranch;\n","import { faTrophy } from \"@fortawesome/free-solid-svg-icons\";\nimport { CheckCircle, Code, Info, OpenInNew } from \"@mui/icons-material\";\nimport Branch from \"../../components/Branch\";\nimport Commit from \"../../components/Commit\";\nimport SelLogo from \"../../Icons/SelLogo\";\nimport PsiLogo from \"../../Images/psi_adobespark.png\";\n\nconst SelBranch = () => {\n  return (\n    <>\n      <Commit\n        size=\"lg\"\n        id=\"head\"\n        Element={\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              width: \"100%\",\n              height: \"70px\",\n              fill: \"#FFFFFF\",\n            }}\n          >\n            <SelLogo />\n          </div>\n        }\n        title=\"Schweitzer Engineering Laboratories\"\n        subContent=\"Associate Software Engineer\"\n        branch=\"sel\"\n        iconSize={100}\n      />\n      <Commit\n        Icon={Info}\n        title=\"About\"\n        content=\"At my current role at SEL, I am a part of the development team working on Grid Configurator. This is an ASP.NET app used to configure \n        relays in power stations around the world.\"\n      />\n      <Commit\n        Icon={Code}\n        title=\"Tech stack\"\n        subContent=\"C#, React, Typescript, GraphQL\"\n      />\n      <Commit title=\"Accomplishments/Tasks\" faIcon={faTrophy} iconSize={38} />\n      <Branch>\n        <Commit\n          content=\"Collaborated on a team of engineers to execute user interface enhancements.\"\n          Icon={CheckCircle}\n          isBranch\n        />\n        <Commit\n          content=\"Implemented new full stack features to make end users workflow's more efficient.\"\n          Icon={CheckCircle}\n          isBranch\n        />\n        <Commit\n          content=\"Contributed reusable React components to a library shared across the company.\"\n          Icon={CheckCircle}\n          isBranch\n        />\n        <Commit\n          content=\"Developed new API endpoints as well as improved speed and reliability of existing ones.\"\n          Icon={CheckCircle}\n          isBranch\n        />\n        <Commit\n          content=\"Write comprehensive tests covering every new feature that is implemented.\"\n          Icon={CheckCircle}\n          isBranch\n        />\n      </Branch>\n      <Commit\n        Icon={OpenInNew}\n        title=\"Schweitzer Engineering Laboratories website\"\n        link=\"https://selinc.com/\"\n      />\n      <Commit\n        Icon={OpenInNew}\n        title=\"Grid Configurator page\"\n        link=\"https://selinc.com/products/5037/\"\n      />\n      <Commit\n        title=\"Previous Work: Process Solutions Inc\"\n        image={PsiLogo}\n        iconSize={80}\n        isInit\n        branch=\"psi\"\n        routeBranch\n      />\n    </>\n  );\n};\n\nexport default SelBranch;\n","import { faTrophy } from \"@fortawesome/free-solid-svg-icons\";\nimport { CheckCircle, Fastfood, Info, OpenInNew } from \"@mui/icons-material\";\nimport Branch from \"../../components/Branch\";\nimport Commit from \"../../components/Commit\";\nimport SelLogo from \"../../Icons/SelLogo\";\nimport PsiLogo from \"../../Images/psi_adobespark.png\";\n\nconst PsiBranch = () => {\n  return (\n    <>\n      <Commit\n        size=\"lg\"\n        id=\"head\"\n        image={PsiLogo}\n        title=\"Process Solutions Inc\"\n        subContent=\"Control Systems Engineer\"\n        branch=\"psi\"\n        iconSize={80}\n      />\n      <Commit Icon={Info} title=\"About\" />\n      <Commit title=\"Accomplishments/Tasks\" faIcon={faTrophy} iconSize={38} />\n      <Branch>\n        <Commit\n          content=\"Created a tool in C# that generates 80% of PLC logic for our most common project types.\"\n          Icon={CheckCircle}\n          isBranch\n        />\n        <Commit\n          content=\"Redesigned all Wonderware HMI UI's to be object based resulting in significant reduction in development time.\"\n          Icon={CheckCircle}\n          isBranch\n        />\n        <Commit\n          content=\"Completed high profile projects which opened more opportunities for company growth.\"\n          Icon={CheckCircle}\n          isBranch\n        />\n      </Branch>\n      <Commit\n        Icon={OpenInNew}\n        title=\"Process Solutions Inc Website\"\n        link=\"https://processsolutions.com/\"\n      />\n      <Commit\n        title=\"Next Work: Schweitzer Engineering Laboratories\"\n        Element={\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              width: \"100%\",\n              height: \"40px\",\n              fill: \"#FFFFFF\",\n            }}\n          >\n            <SelLogo />\n          </div>\n        }\n        iconSize={80}\n        isInit\n        branch=\"sel\"\n        routeBranch\n      />\n      <Commit\n        title=\"Latest Project: Recipe Planner\"\n        Icon={Fastfood}\n        isInit\n        branch=\"recipe\"\n        routeBranch\n      />\n    </>\n  );\n};\n\nexport default PsiBranch;\n","import { faChessKing } from \"@fortawesome/free-solid-svg-icons\";\nimport { Code, Fastfood, Info, OpenInNew } from \"@mui/icons-material\";\nimport Commit from \"../../components/Commit\";\nimport PsiLogo from \"../../Images/psi_adobespark.png\";\n\nconst RecipePlannerBranch = () => {\n  return (\n    <>\n      <Commit\n        size=\"lg\"\n        id=\"head\"\n        Icon={Fastfood}\n        title=\"Recipe Planner\"\n        branch=\"recipe\"\n        iconSize={100}\n      />\n      <Commit Icon={Info} title=\"About\" />\n      <Commit Icon={OpenInNew} title=\"View Live!\" />\n      <Commit\n        Icon={Code}\n        title=\"Source Code\"\n        link=\"https://github.com/JCrews253/FoodPlanner\"\n      />\n      <Commit\n        title=\"Work Experience: Process Solutions Inc\"\n        image={PsiLogo}\n        iconSize={80}\n        isInit\n        branch=\"psi\"\n        routeBranch\n      />\n      <Commit\n        title=\"Previous Project: Chess AI - Min Max Algo\"\n        faIcon={faChessKing}\n        isInit\n        branch=\"chess\"\n        routeBranch\n      />\n    </>\n  );\n};\n\nexport default RecipePlannerBranch;\n","import { ThemeProvider, Box, PaletteMode, createTheme } from \"@mui/material\";\nimport AppBar from \"./components/AppBar\";\nimport { getThemePalette } from \"./Theme\";\nimport Drawer from \"./components/Drawer\";\nimport { createContext, useEffect, useMemo, useState } from \"react\";\nimport BranchesLeftDark from \"./Images/branchesLeftDark.png\";\nimport BranchesLeftLight from \"./Images/branchesLeftLight.png\";\nimport BranchesRightDark from \"./Images/branchesRightDark.png\";\nimport BranchesRightLight from \"./Images/branchesRightLight.png\";\nimport \"./index.css\";\nimport MainBranch from \"./branches/MainBranch\";\nimport SortingVisualizationBranch from \"./branches/projects/SortingVisualizationBranch\";\nimport PathFindingBranch from \"./branches/projects/PathFindingBranch\";\nimport ChessBranch from \"./branches/projects/ChessBranch\";\nimport SelBranch from \"./branches/work/SelBranch\";\nimport PsiBranch from \"./branches/work/PsiBranch\";\nimport RecipePlannerBranch from \"./branches/projects/RecipePlannerBranch\";\nimport { branch } from \"./branches/Branch\";\n\nexport const ColorModeContext = createContext({ toggleColorMode: () => {} });\nexport const BranchContext = createContext({\n  branch: \"\",\n  setBranch: (branch: branch) => {},\n});\n\nfunction App() {\n  const [open, setOpen] = useState(false);\n  const [mode, setMode] = useState<PaletteMode>(\"dark\");\n  const colorMode = useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode: PaletteMode) =>\n          prevMode === \"light\" ? \"dark\" : \"light\"\n        );\n      },\n    }),\n    []\n  );\n  const theme = useMemo(() => createTheme(getThemePalette(mode)), [mode]);\n  const [branch, setBranch] = useState<branch>(\"main\");\n  const branchValue = useMemo(\n    () => ({\n      branch,\n      setBranch,\n    }),\n    [branch]\n  );\n\n  const getBranch = () => {\n    switch (branch) {\n      case \"main\":\n        return <MainBranch />;\n      case \"sel\":\n        return <SelBranch />;\n      case \"psi\":\n        return <PsiBranch />;\n      case \"recipe\":\n        return <RecipePlannerBranch />;\n      case \"chess\":\n        return <ChessBranch />;\n      case \"pathFinding\":\n        return <PathFindingBranch />;\n      case \"sorting\":\n        return <SortingVisualizationBranch />;\n      default:\n        return <MainBranch />;\n    }\n  };\n\n  useEffect(() => {\n    document.getElementById(\"head\")?.scrollIntoView({ behavior: \"smooth\" });\n  }, [branch]);\n\n  return (\n    <BranchContext.Provider value={branchValue}>\n      <ColorModeContext.Provider value={colorMode}>\n        <ThemeProvider theme={theme}>\n          <Box\n            sx={{\n              display: \"flex\",\n              overflowX: \"hidden\",\n              height: \"100%\",\n              backgroundColor: (theme) => theme.palette.background.default,\n            }}\n          >\n            <AppBar open={open} setOpen={() => setOpen(true)} />\n            <Drawer open={open} setOpen={setOpen} />\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                paddingLeft: \"50px\",\n                marginTop: \"64px\",\n                width: \"100%\",\n                overflowX: \"hidden\",\n                zIndex: 1,\n              }}\n            >\n              {getBranch()}\n            </Box>\n            <Box\n              sx={{\n                position: \"fixed\",\n                bottom: 0,\n                left: 0,\n                right: 0,\n                opacity: 0.05,\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                userSelect: \"none\",\n                zIndex: 0,\n              }}\n            >\n              <img\n                src={\n                  theme.palette.mode === \"dark\"\n                    ? BranchesLeftDark\n                    : BranchesLeftLight\n                }\n                alt=\"\"\n              />\n              <img\n                src={\n                  theme.palette.mode === \"dark\"\n                    ? BranchesRightDark\n                    : BranchesRightLight\n                }\n                style={{\n                  paddingLeft: \"20px\",\n                }}\n                alt=\"\"\n              />\n            </Box>\n          </Box>\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </BranchContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}